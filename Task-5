import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import precision_score, recall_score, f1_score, classification_report

file_path = r"C:\Users\admin\Downloads\archive (3)\creditcard.csv"
df = pd.read_csv(file_path)

df
# Checking and removing missing values
missing_values = df.isnull().sum()
print("Missing Values:")
print(missing_values)
# Data Preprocessing
X = df.drop('Class', axis=1)  
y = df['Class']  # Target variable
# Split the dataset into training and testing sets 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
# Normalize/Scale the features
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)
from imblearn.over_sampling import SMOTE
smote = SMOTE(random_state=42)
X_train_resample, y_train_resample = smote.fit_resample(X_train, y_train)
ml = RandomForestClassifier(n_estimators=100, random_state=42)  
ml.fit(X_train_resample, y_train_resample)
# Making Prediction
y_pred = ml.predict(X_test)
# Make predictions and predict probabilities
y_pred = ml.predict(X_test)
y_proba = ml.predict_proba(X_test)[:, 1]

# Evaluate the model's performance
precise = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred)
classification_rep = classification_report(y_test, y_pred)
print("Classification Report:")
print(classification_rep)
print(f"Precision: {precise:.4f}")
print(f"Recall: {recall:.4f}")
print(f"F1-Score: {f1:.4f}")
import matplotlib.pyplot as plt
# Create a histogram to differentiate genuine and fraudulent transactions based on predicted probabilities
plt.figure(figsize=(8, 6))
plt.hist(y_proba[y_test == 0], bins=50, label='Genuine', alpha=0.5)
plt.hist(y_proba[y_test == 1], bins=50, label='Fraudulent', alpha=0.5)
plt.xlabel('Predicted Probability')
plt.ylabel('Frequency')
plt.title('Predicted Probabilities of Genuine vs. Fraudulent Transactions')
plt.legend()
plt.show()
